{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { REGISTER_SUCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from \"./types\"; //LOAD User\n\nexport const loadUser = () => async dispatch => {}; //Register User\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n    dispatch({\n      type: REGISTER_SUCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const error = err.response.data.errors;\n\n    if (error) {\n      error.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["G:/GitRepository/MERN/React_App/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","loadUser","dispatch","register","name","email","password","config","headers","body","JSON","stringify","res","post","type","payload","data","err","error","response","errors","forEach","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SACEC,eADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,QAKO,SALP,C,CAQA;;AAEA,OAAO,MAAMC,QAAQ,GAAE,MAAI,MAAMC,QAAN,IAAgB,CAE1C,CAFM,C,CAOP;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAMJ,QAAN,IAAkB;AACvE,QAAMK,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEP,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb;;AAEA,MAAI;AACF,UAAMM,GAAG,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAW,YAAX,EAAyBJ,IAAzB,EAA+BF,MAA/B,CAAlB;AAEAL,IAAAA,QAAQ,CAAC;AACPY,MAAAA,IAAI,EAAEjB,eADC;AAEPkB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,UAAMC,KAAK,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBI,MAAhC;;AAEA,QAAIF,KAAJ,EAAW;AACTA,MAAAA,KAAK,CAACG,OAAN,CAAcH,KAAK,IAAIhB,QAAQ,CAACN,QAAQ,CAACsB,KAAK,CAACI,GAAP,EAAY,QAAZ,CAAT,CAA/B;AACD;;AAEDpB,IAAAA,QAAQ,CAAC;AACPY,MAAAA,IAAI,EAAEhB;AADC,KAAD,CAAR;AAGD;AACF,CA3BM","sourcesContent":["import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  REGISTER_SUCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR\r\n} from \"./types\";\r\n\r\n\r\n//LOAD User\r\n\r\nexport const loadUser =()=>async dispatch=>{\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n//Register User\r\n\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/users\", body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCESS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    const error = err.response.data.errors;\r\n\r\n    if (error) {\r\n      error.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}